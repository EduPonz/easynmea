name: automated_testing

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main
  schedule:
    - cron: '0 0 * * *'

jobs:
  ubuntu-build-test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install apt packages
        run: |
          sudo apt update && sudo apt -y install \
            software-properties-common \
            cmake \
            g++ \
            wget \
            libasio-dev \
            doxygen \
            python3 \
            python3-pip \
            python3-sphinxcontrib.spelling \
            python3-venv \
            socat

      - uses: ./.github/actions/install-gtest-ubuntu

      - name: Install python packages
        run: |
          pip3 install -r docs/requirements.txt
          pip3 install -r test/system/requirements.txt

      - name: Install gcovr
        run: pip3 install -U gcovr

      - name: Configure project
        run: |
          mkdir build && \
          cd build && \
          cmake .. \
            -DBUILD_DOCUMENTATION=ON \
            -DBUILD_TESTS=ON \
            -DBUILD_EXAMPLES=ON \
            -DGCC_CODE_COVERAGE=ON \
            -DCMAKE_BUILD_TYPE=Debug

      - name: Build project
        run: |
          cd build && \
          cmake --build .

      - name: Run tests
        run: |
          cd build && \
          ctest -VV

      - name: Generate coverage report
        run: |
          mkdir coverage-report
          gcovr \
            --root ./ \
            --object-directory build/ \
            --output coverage-report/coverage.xml \
            --xml-pretty \
            --exclude='.*docs/.*' \
            --exclude='.*test/.*' \
            --exclude='.*examples/.*' \
            --exclude='.*github/.*' \
            --exclude='.*resources/.*' \
            --exclude-unreachable-branches
        if: always()

      - name: Upload coverage report to Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: coverage-report/coverage.xml
          root_dir: easynmea
          fail_ci_if_error: true

      - name: Upload documentation
        uses: actions/upload-artifact@v1
        with:
          name: Documentation HTML
          path: build/docs/sphinx/html/
        if: always()
